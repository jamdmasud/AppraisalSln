//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RepositoryPattern
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AppraisalDbContext : DbContext
    {
        public AppraisalDbContext()
            : base("name=AppraisalDbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<Company> Company { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<DepartmentConfig> DepartmentConfig { get; set; }
        public virtual DbSet<Designation> Designation { get; set; }
        public virtual DbSet<DirectorActivities> DirectorActivities { get; set; }
        public virtual DbSet<Employee> Employee { get; set; }
        public virtual DbSet<EmployeeSummery> EmployeeSummery { get; set; }
        public virtual DbSet<FiscalYear> FiscalYear { get; set; }
        public virtual DbSet<HeadOfBusinessUnit> HeadOfBusinessUnit { get; set; }
        public virtual DbSet<Increament> Increament { get; set; }
        public virtual DbSet<JobDescription> JobDescription { get; set; }
        public virtual DbSet<ObjectiveMain> ObjectiveMain { get; set; }
        public virtual DbSet<ObjectiveSub> ObjectiveSub { get; set; }
        public virtual DbSet<PerformanceAppraisal> PerformanceAppraisal { get; set; }
        public virtual DbSet<Section> Section { get; set; }
    
        public virtual int SP_GetEmployeeByReportToForOrganogram(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_GetEmployeeByReportToForOrganogram", idParameter);
        }
    
        public virtual ObjectResult<SP_GetEmployeeByReportToForOrganogram_Result> SP_GetEmployeeByReportToForOrganogram1(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetEmployeeByReportToForOrganogram_Result>("SP_GetEmployeeByReportToForOrganogram1", idParameter);
        }
    
        public virtual ObjectResult<SP_GetEmployeeByReportToForOrganogram2_Result> SP_GetEmployeeByReportToForOrganogram2(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetEmployeeByReportToForOrganogram2_Result>("SP_GetEmployeeByReportToForOrganogram2", idParameter);
        }
    
        public virtual ObjectResult<spJobDescriptionForChart_Result> spJobDescriptionForChart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spJobDescriptionForChart_Result>("spJobDescriptionForChart");
        }
    }
}
